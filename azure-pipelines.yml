jobs:

- job: win32
  displayName: 'Windows (32-bit)'
  pool:
    vmImage: 'vs2017-win2016'

  steps:

  - task: DownloadSecureFile@1
    name: R2012b
    inputs:
      secureFile: R2012b-win32.zip

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: $(R2012b.secureFilePath)
      destinationFolder: ThirdParty/R2012b

  - script: |
      cmake -G "Visual Studio 15 2017" -B build -DMATLAB_DIR=ThirdParty/R2012b .
      cmake --build build --config Release
    displayName: Build generic S-function

  - task: PublishPipelineArtifact@1
    inputs:
      path: sfun_fmurun.mexw32
      artifact: win32

- job: win64
  displayName: 'Windows (64-bit)'
  pool:
    vmImage: 'vs2017-win2016'

  steps:

  - task: DownloadSecureFile@1
    name: R2012b
    inputs:
      secureFile: R2012b-win64.zip

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: $(R2012b.secureFilePath)
      destinationFolder: ThirdParty/R2012b

  - script: |
      cmake -G "Visual Studio 15 2017 Win64" -B build -DMATLAB_DIR=ThirdParty/R2012b .
      cmake --build build --config Release
    displayName: Build generic S-function

  - task: PublishPipelineArtifact@1
    inputs:
      path: sfun_fmurun.mexw64
      artifact: win64

- job: glnxa64
  displayName: 'Linux'
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - task: DownloadSecureFile@1
    name: MATLAB
    inputs:
      secureFile: R2018b-linux64.tar.gz

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: $(MATLAB.secureFilePath)
      destinationFolder: ThirdParty

  - script: |
      cmake -B build -DMATLAB_DIR=ThirdParty/R2018b-linux64 .
      cmake --build build --config Release
    displayName: Build generic S-function

  - task: Maven@3
    inputs:
      mavenPomFile: Java/pom.xml
      goals: install

  - task: PublishPipelineArtifact@1
    inputs:
      path: sfun_fmurun.mexa64
      artifact: sfun

  - task: PublishPipelineArtifact@1
    inputs:
      path: fmikit.jar
      artifact: glnxa64
